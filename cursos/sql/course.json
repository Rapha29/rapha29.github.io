{"headline":"Aprenda os fundamentos da linguagem SQL e gerencie bancos de dados com eficiência","languageId":"pt-BR","createdAt":"2023-05-31T05:48:39.057Z","version":4,"id":"d0HAPYMeuaxUwnkMIOl0","keywords":{"keyword4":"querying","keyword3":"data management","keyword5":"data manipulation","keyword1":"SQL","keyword2":"relational databases"},"sections":{"practice":{"headline":"Vamos colocar seus conhecimentos em prática","blocks":{"BC5Ch56Jmq":{"order":2,"items":{"Lfjgm9DqdQ":{"title":"Criar uma tabela em um banco de dados MySQL","content":"Crie uma tabela chamada 'produtos' com três campos: id, nome e preco. O campo id deve ser a chave primária da tabela.","order":1},"unjqrEtjxN":{"order":2,"content":"Crie uma consulta que liste o número total de pedidos na tabela 'pedidos' e a média de preço por pedido. A consulta deve agrupar os resultados pelo campo 'id_cliente'.","title":"Listar o número total de pedidos e a média de preço por pedido"},"QoaLiDxMKo":{"content":"Use o comando mysqldump para fazer backup de um banco de dados MySQL chamado 'meu_banco_de_dados' em um arquivo chamado 'backup.sql'.","title":"Fazer backup de um banco de dados MySQL","order":3}},"type":"list"},"q5RMwA4OkM":{"order":1,"type":"html","html":"<p>Nesta lição, colocaremos a teoria em prática por meio de atividades práticas. Clique nos itens abaixo para conferir cada exercício e desenvolver habilidades práticas que o ajudarão a ter sucesso na disciplina.</p>"}},"slug":"practice","short":"Prática","order":4,"name":"Exercícios Práticos"},"quiz":{"short":"Questionário","blocks":{"RMv01I5VgR":{"questions":{"que_LRkos4bJqF":{"order":6,"choices":{"cho_8iWG8FwEBm":{"order":3,"choice":"Autorização","correct":false},"cho_KXvGRbMD0A":{"choice":"Autenticação","order":2,"correct":true},"cho_1GruqH8FAM":{"choice":"Criptografia","order":1,"correct":false}},"question":"Qual a técnica usada para verificar a identidade dos usuários que acessam o banco de dados?"},"que_5VYqVKFfEi":{"order":3,"question":"Qual o comando usado para fazer backup de um banco de dados MySQL?","choices":{"cho_MbklJnD6x0":{"order":2,"choice":"mysqlbackup","correct":false},"cho_0IHF3PJVwV":{"order":1,"correct":true,"choice":"mysqldump"},"cho_YCxE9kKuUq":{"correct":false,"order":3,"choice":"backmysql"}}},"que_Iio23Vj4cF":{"order":2,"choices":{"cho_yx9vLdo5VB":{"order":2,"choice":"SELECT * FROM clientes ORDER BY idade DESC LIMIT 10","correct":true},"cho_Ku2jJwNSM5":{"correct":false,"order":3,"choice":"SELECT * FROM clientes WHERE idade >= 10 LIMIT 10"},"cho_jF6bkFXylT":{"correct":false,"choice":"SELECT * FROM clientes ORDER BY idade ASC LIMIT 10","order":1}},"question":"Como listar os 10 clientes mais velhos na tabela 'clientes', em ordem decrescente de idade?"},"que_Z2oEsNXqQj":{"question":"Qual o tipo de junção que retorna apenas os registros que têm correspondência em ambas as tabelas?","order":5,"choices":{"cho_DQsrsZQiaC":{"correct":false,"choice":"LEFT JOIN","order":2},"cho_BhSIPaWx7e":{"correct":false,"choice":"RIGHT JOIN","order":3},"cho_pKDB7WQMf1":{"correct":true,"order":1,"choice":"INNER JOIN"}}},"que_n3guaNJqrR":{"order":4,"question":"Qual a função usada para calcular a média de um conjunto de dados no SQL?","choices":{"cho_zDkAQmaeD0":{"choice":"MAX","correct":false,"order":2},"cho_QWJsenqsVa":{"order":3,"choice":"AVG","correct":true},"cho_VjKsiBODTo":{"correct":false,"order":1,"choice":"SUM"}}},"que_utUY2OKC0o":{"question":"Qual comando é usado para criar uma tabela em um banco de dados MySQL?","order":1,"choices":{"cho_uKi1qkEGOv":{"order":3,"choice":"SELECT","correct":false},"cho_jSzrCxVdJ7":{"choice":"INSERT","correct":false,"order":1},"cho_4UvOpsiBQb":{"order":2,"choice":"CREATE TABLE","correct":true}}}},"type":"quiz","order":1}},"order":6,"name":"Questionário","headline":"Verifique seu conhecimento respondendo a algumas perguntas","slug":"quiz"},"module3":{"short":"Manipulação","blocks":{"R30BhtQN7S":{"type":"highlight","title":"Conclusão - Manipulação de Dados em SQL","content":"Neste módulo, aprendemos sobre gerenciamento de bancos de dados, incluindo backup, restauração, segurança e manutenção. Esses conceitos são essenciais para garantir a integridade e desempenho de nossos bancos de dados ao longo do tempo. Com essas habilidades, somos capazes de administrar bancos de dados relacionais de maneira eficiente e eficaz.","order":2},"QHtI68PsuA":{"order":1,"html":"<p>O módulo &quot;Gerenciamento de Banco de Dados&quot; é o terceiro e último de um curso destinado a iniciantes que desejam aprender sobre a linguagem SQL e como utilizá-la para manipulação de dados em bancos de dados relacionais. Neste módulo, vamos nos concentrar no gerenciamento de bancos de dados, abordando tópicos como backup, restauração e segurança.</p>\n<h2>Backup e Restauração</h2>\n<p>Fazer backups regulares do nosso banco de dados é essencial para garantir a recuperação de dados em caso de falhas ou perda de informações. No SQL, podemos fazer backups de nossos bancos de dados usando o comando <code>mysqldump</code>. Por exemplo, para fazer backup da tabela <code>clientes</code>, usamos o seguinte código:</p>\n<pre><code>mysqldump -u USUARIO -p SENHA NOMEDOBANCODEDADOS clientes &gt; backup.sql\n</code></pre>\n<p>Neste exemplo, estamos fazendo backup da tabela <code>clientes</code> em nosso banco de dados, usando o comando <code>mysqldump</code>. O backup é salvo em um arquivo chamado <code>backup.sql</code>.</p>\n<p>Para restaurar um backup anterior, usamos o comando <code>mysql</code>. Por exemplo, para restaurar o backup <code>backup.sql</code> em nosso banco de dados, usamos o seguinte código:</p>\n<pre><code>mysql -u USUARIO -p SENHA NOMEDOBANCODEDADOS &lt; backup.sql\n</code></pre>\n<p>Neste exemplo, estamos restaurando o backup <code>backup.sql</code> em nosso banco de dados, usando o comando <code>mysql</code>.</p>\n<h2>Segurança</h2>\n<p>Garantir a segurança de nossos bancos de dados é essencial para proteger nossas informações confidenciais e evitar violações de segurança. No SQL, podemos implementar medidas de segurança usando diferentes técnicas, como criptografia, autenticação e autorização.</p>\n<p>A criptografia é usada para proteger nossos dados em trânsito ou em repouso. Podemos usar criptografia para proteger nossas conexões com o banco de dados ou para criptografar informações confidenciais armazenadas no banco de dados.</p>\n<p>A autenticação é usada para verificar a identidade dos usuários que acessam o banco de dados. No SQL, podemos autenticar usuários usando senhas ou chaves de acesso.</p>\n<p>A autorização é usada para controlar o acesso dos usuários aos dados do banco de dados. Podemos conceder permissões específicas aos usuários para acessar determinados dados ou executar determinadas tarefas.</p>\n<h2>Manutenção</h2>\n<p>Manter nossos bancos de dados é essencial para garantir sua integridade e desempenho ao longo do tempo. No SQL, podemos realizar várias tarefas de manutenção, como otimização de consultas, compactação de tabelas e limpeza de registros antigos.</p>\n<p>A otimização de consultas é usada para melhorar o desempenho das consultas em nosso banco de dados. Podemos usar técnicas como índices, otimização de junções e cache de resultados para otimizar nossas consultas.</p>\n<p>A compactação de tabelas é usada para reduzir o espaço ocupado por nossas tabelas e melhorar o desempenho do banco de dados. Podemos compactar nossas tabelas usando o comando <code>OPTIMIZE TABLE</code>.</p>\n<p>A limpeza de registros antigos é usada para remover registros desnecessários de nossas tabelas e manter nosso banco de dados organizado. Podemos usar o comando <code>DELETE</code> para remover registros antigos com base em critérios específicos.</p>","type":"html"}},"name":"Manipulação de Dados em SQL","slug":"manipulacao","order":3},"wrapup":{"slug":"wrapup","short":"Resumo","name":"Resumo","blocks":{"nAtzHcdgOA":{"type":"list","order":1,"items":{"con_vtPZ8AIfcW":{"content":"Neste módulo, aprendemos os fundamentos do SQL, incluindo a criação de tabelas, a inserção de dados, a atualização de registros existentes e a exclusão de dados. Esses conceitos são essenciais para qualquer pessoa que queira trabalhar com bancos de dados relacionais e serão utilizados em todos os módulos restantes deste curso.","order":1,"title":"Introdução ao SQL"},"con_cVKlUIwVqP":{"content":"Neste módulo, aprendemos sobre gerenciamento de bancos de dados, incluindo backup, restauração, segurança e manutenção. Esses conceitos são essenciais para garantir a integridade e desempenho de nossos bancos de dados ao longo do tempo. Com essas habilidades, somos capazes de administrar bancos de dados relacionais de maneira eficiente e eficaz.","title":"Manipulação de Dados em SQL","order":3},"con_8WRu9yUviP":{"order":2,"title":"Consultas avançadas em SQL","content":"Neste módulo, aprendemos sobre recursos avançados do SQL, incluindo funções agregadas, subconsultas, junções e ordenação/limitação de resultados. Esses conceitos são essenciais para consultas mais complexas em bancos de dados relacionais e serão utilizados em todos os módulos restantes deste curso."}}}},"order":5,"headline":"Vamos revisar o que acabamos de ver até agora"},"module2":{"slug":"consultas","short":"Consultas","blocks":{"dyVFvIoetE":{"order":2,"title":"Conclusão - Consultas avançadas em SQL","content":"Neste módulo, aprendemos sobre recursos avançados do SQL, incluindo funções agregadas, subconsultas, junções e ordenação/limitação de resultados. Esses conceitos são essenciais para consultas mais complexas em bancos de dados relacionais e serão utilizados em todos os módulos restantes deste curso.","type":"highlight"},"3IPnKN6lAr":{"type":"html","html":"<p>O módulo &quot;Queries Avançadas com SQL&quot; é o segundo de um curso destinado a iniciantes que desejam aprender sobre a linguagem SQL e como utilizá-la para manipulação de dados em bancos de dados relacionais. Neste módulo, vamos nos aprofundar nas queries (consultas) em SQL, explorando funções agregadas, subconsultas, junções e outros recursos avançados.</p>\n<h2>Funções Agregadas</h2>\n<p>Funções agregadas são usadas para realizar cálculos em conjuntos de dados, como média, soma, mínimo e máximo. No SQL, as funções agregadas incluem <code>AVG</code>, <code>SUM</code>, <code>MIN</code> e <code>MAX</code>. Por exemplo, para calcular a média das idades dos clientes na tabela <code>clientes</code>, usamos o seguinte código:</p>\n<pre><code>SELECT AVG(idade) FROM clientes;\n</code></pre>\n<p>Neste exemplo, estamos usando a função <code>AVG</code> para calcular a média das idades na tabela <code>clientes</code>.</p>\n<h2>Subconsultas</h2>\n<p>Subconsultas são consultas internas que podem ser usadas como parte de uma consulta maior. Elas são úteis quando precisamos recuperar informações de múltiplas tabelas ou filtrar resultados baseados em critérios mais complexos. Por exemplo, para listar todos os pedidos feitos pelo cliente com <code>id</code> igual a <code>1</code>, usamos o seguinte código:</p>\n<pre><code>SELECT * FROM pedidos WHERE id_cliente = (SELECT id FROM clientes WHERE id = 1);\n</code></pre>\n<p>Neste exemplo, estamos usando uma subconsulta para encontrar o <code>id</code> do cliente com <code>id</code> igual a <code>1</code> na tabela <code>clientes</code>. Em seguida, usamos esse valor para filtrar os resultados da tabela <code>pedidos</code>.</p>\n<h2>Junções</h2>\n<p>Junções (joins) são usadas para combinar informações de duas ou mais tabelas em uma única consulta. Existem vários tipos de junções, incluindo <code>INNER JOIN</code>, <code>LEFT JOIN</code>, <code>RIGHT JOIN</code> e <code>FULL OUTER JOIN</code>. Por exemplo, para listar todos os pedidos feitos por clientes na tabela <code>clientes</code>, juntamente com suas respectivas informações de endereço na tabela <code>enderecos</code>, usamos o seguinte código:</p>\n<pre><code>SELECT pedidos.*, enderecos.* FROM pedidos\nINNER JOIN clientes ON pedidos.id_cliente = clientes.id\nINNER JOIN enderecos ON clientes.id_endereco = enderecos.id;\n</code></pre>\n<p>Neste exemplo, estamos usando um <code>INNER JOIN</code> para unir a tabela <code>pedidos</code> à tabela <code>clientes</code> com base no campo <code>id_cliente</code>. Em seguida, estamos usando outro <code>INNER JOIN</code> para unir a tabela <code>clientes</code> à tabela <code>enderecos</code> com base no campo <code>id_endereco</code>.</p>\n<h2>Ordenação e Limitação de Resultados</h2>\n<p>Por fim, podemos ordenar e limitar os resultados de nossas consultas usando as cláusulas <code>ORDER BY</code> e <code>LIMIT</code>. A cláusula <code>ORDER BY</code> é usada para ordenar os resultados com base em um ou mais campos específicos, enquanto a cláusula <code>LIMIT</code> é usada para limitar o número de resultados retornados. Por exemplo, para listar os 10 clientes mais velhos na tabela <code>clientes</code>, em ordem decrescente de idade, usamos o seguinte código:</p>\n<pre><code>SELECT * FROM clientes ORDER BY idade DESC LIMIT 10;\n</code></pre>\n<p>Neste exemplo, estamos usando a cláusula <code>ORDER BY</code> para ordenar os resultados da tabela <code>clientes</code> com base no campo <code>idade</code>, em ordem decrescente. Em seguida, estamos usando a cláusula <code>LIMIT</code> para limitar o número de resultados retornados a 10.</p>","order":1}},"order":2,"name":"Consultas avançadas em SQL"},"module1":{"blocks":{"DdwlOBsCEW":{"html":"<p>O módulo &quot;Fundamentos do SQL&quot; é o primeiro de um curso destinado a iniciantes que desejam aprender sobre a linguagem SQL e como utilizá-la para manipulação de dados em bancos de dados relacionais. Neste módulo, vamos abordar os conceitos mais básicos do SQL, desde a criação de tabelas até a inserção, atualização e exclusão de dados.</p>\n<h2>Introdução ao SQL</h2>\n<p>SQL (Structured Query Language) é uma linguagem de programação usada para gerenciar informações armazenadas em bancos de dados relacionais. Ele foi desenvolvido na década de 1970 e se tornou uma das principais linguagens de banco de dados utilizadas hoje em dia. O SQL permite aos usuários realizar diversas tarefas, incluindo a criação de novas tabelas, a inserção de dados, a atualização de registros existentes e a exclusão de dados.</p>\n<h2>Criação de Tabelas</h2>\n<p>Antes de podermos inserir dados em um banco de dados usando SQL, temos que criar as tabelas que irão armazenar esses dados. Uma tabela é basicamente uma coleção de informações organizadas em colunas (campos) e linhas (registros). A estrutura da tabela é definida pelos campos que ela contém, bem como pelo tipo de dados que cada campo pode armazenar.</p>\n<p>Para criar uma tabela no SQL, usamos o comando <code>CREATE TABLE</code>. Por exemplo, para criar uma tabela chamada <code>clientes</code> com três campos (<code>id</code>, <code>nome</code> e <code>idade</code>), usamos o seguinte código:</p>\n<pre><code>CREATE TABLE clientes (\n    id INT PRIMARY KEY,\n    nome VARCHAR(50),\n    idade INT\n);\n</code></pre>\n<p>Neste exemplo, estamos criando uma tabela chamada <code>clientes</code> com três campos: <code>id</code>, <code>nome</code> e <code>idade</code>. O campo <code>id</code> é definido como a chave primária da tabela (usando o comando <code>PRIMARY KEY</code>) e é do tipo <code>INT</code>. Os campos <code>nome</code> e <code>idade</code> são do tipo <code>VARCHAR(50)</code> e <code>INT</code>, respectivamente.</p>\n<h2>Inserção de Dados</h2>\n<p>Uma vez que tenhamos criado uma tabela, podemos inserir dados nela usando o comando <code>INSERT INTO</code>. Por exemplo, para inserir um novo registro na tabela <code>clientes</code>, usamos o seguinte código:</p>\n<pre><code>INSERT INTO clientes (id, nome, idade) VALUES (1, &#39;João&#39;, 30);\n</code></pre>\n<p>Neste exemplo, estamos inserindo um novo registro na tabela <code>clientes</code>. O valor <code>1</code> é inserido no campo <code>id</code>, o valor <code>&#39;João&#39;</code> é inserido no campo <code>nome</code> e o valor <code>30</code> é inserido no campo <code>idade</code>.</p>\n<h2>Atualização de Dados</h2>\n<p>Por vezes, precisamos atualizar informações já existentes em nossas tabelas. Para fazer isso, usamos o comando <code>UPDATE</code>. Por exemplo, para atualizar o nome do cliente com <code>id</code> igual a <code>1</code>, usamos o seguinte código:</p>\n<pre><code>UPDATE clientes SET nome = &#39;Maria&#39; WHERE id = 1;\n</code></pre>\n<p>Neste exemplo, estamos atualizando o registro na tabela <code>clientes</code> onde o campo <code>id</code> é igual a <code>1</code>. Estamos alterando o valor do campo <code>nome</code> para <code>&#39;Maria&#39;</code>.</p>\n<h2>Exclusão de Dados</h2>\n<p>Finalmente, às vezes precisamos excluir registros de nossas tabelas. Para fazer isso, usamos o comando <code>DELETE</code>. Por exemplo, para excluir o registro na tabela <code>clientes</code> onde o campo <code>id</code> é igual a <code>1</code>, usamos o seguinte código:</p>\n<pre><code>DELETE FROM clientes WHERE id = 1;\n</code></pre>\n<p>Neste exemplo, estamos excluindo o registro na tabela <code>clientes</code> onde o campo <code>id</code> é igual a <code>1</code>.</p>","order":1,"type":"html"},"s48OvdfL9J":{"title":"Conclusão - Introdução ao SQL","type":"highlight","order":2,"content":"Neste módulo, aprendemos os fundamentos do SQL, incluindo a criação de tabelas, a inserção de dados, a atualização de registros existentes e a exclusão de dados. Esses conceitos são essenciais para qualquer pessoa que queira trabalhar com bancos de dados relacionais e serão utilizados em todos os módulos restantes deste curso."}},"short":"Introdução","slug":"introducao","name":"Introdução ao SQL","order":1}},"overview":{"title":"Visão geral","content":"O curso de SQL para Iniciantes é projetado para fornecer aos alunos uma compreensão básica dos conceitos do SQL e ajudá-los a se tornarem proficientes em gerenciar bancos de dados relacionais. Ao longo do curso, os alunos aprenderão como criar bancos de dados, inserir dados, fazer consultas simples e complexas, aplicar funções agregadas e manipular tabelas. O curso também aborda práticas recomendadas para o gerenciamento de bancos de dados e fornece exemplos de casos de uso do mundo real."},"category":"Data Science & Database Management","colorScheme":"purple","conclusion":{"title":"Conclusão","content":"Parabéns por concluir este curso! Você deu um passo importante para liberar todo o seu potencial. Concluir este curso não é apenas adquirir conhecimento; trata-se de colocar esse conhecimento em prática e causar um impacto positivo no mundo ao seu redor."},"name":"SQL para Iniciantes","viewCount":0}