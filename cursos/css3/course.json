{"overview":{"title":"Visão geral","content":"Este curso apresenta os conceitos fundamentais do CSS e sua sintaxe básica para criar estilos em páginas web. Os participantes vão aprender a aplicar cores, fontes, tamanhos, margens, bordas e outros recursos visuais para melhorar a aparência e usabilidade de suas páginas. O curso também aborda técnicas para criar layouts responsivos que se adaptem a diferentes dispositivos e tamanhos de tela."},"conclusion":{"title":"Conclusão","content":"Parabéns por concluir este curso! Você deu um passo importante para liberar todo o seu potencial. Concluir este curso não é apenas adquirir conhecimento; trata-se de colocar esse conhecimento em prática e causar um impacto positivo no mundo ao seu redor."},"sections":{"module3":{"short":"Layouts","name":"Layouts Responsivos","slug":"layouts","order":3,"blocks":{"GQzcDUMVMp":{"order":2,"content":"Neste módulo, aprendemos como criar layouts responsivos usando técnicas como media queries e flexbox. Vimos que as media queries permitem que ajustemos o estilo de elementos com base nas características do dispositivo, enquanto o flexbox oferece uma maneira fácil de organizar e alinhar elementos em um layout flexível. Com essas técnicas, podemos criar layouts que se adaptam a diferentes dispositivos e tamanhos de tela, oferecendo uma ótima experiência de usuário em todos os dispositivos.","title":"Conclusão - Layouts Responsivos","type":"highlight"},"c21sPDMvle":{"type":"html","html":"<p>Os layouts responsivos são uma técnica de design que permite que um site se adapte a diferentes dispositivos e tamanhos de tela, oferecendo uma experiência de usuário otimizada em todos os dispositivos. Neste módulo, veremos como criar layouts responsivos usando técnicas como media queries e flexbox.</p>\n<h2>Media Queries</h2>\n<p>As media queries são uma técnica CSS que permite alterar o estilo de determinados elementos com base nas características do dispositivo em que o site está sendo visualizado, como a largura da tela ou a orientação do dispositivo. Por exemplo, podemos usar uma media query para definir estilos específicos para telas menores, como smartphones ou tablets.</p>\n<p>Para criar uma media query no CSS, usamos a sintaxe <code>@media</code> seguida pelo critério de consulta. Por exemplo, podemos criar uma media query para telas menores do que 768 pixels de largura da seguinte maneira:</p>\n<pre><code class=\"language-css\">@media (max-width: 768px) {\n  /* Estilos para telas menores */\n}\n</code></pre>\n<p>Dentro das chaves, podemos adicionar qualquer estilo que desejarmos para a tela específica. Isso permite que criemos layouts que se ajustam automaticamente à largura da tela em que estão sendo visualizados.</p>\n<h2>Flexbox</h2>\n<p>O flexbox é uma técnica de layout CSS que permite criar layouts flexíveis e responsivos sem a necessidade de float ou position. Ele permite que os elementos dentro de um contêiner sejam organizados facilmente em linhas ou colunas, com recursos adicionais para alinhamento, distribuição e ordem.</p>\n<p>Para usar o flexbox em um layout, devemos primeiro definir um contêiner flexível usando a propriedade <code>display: flex</code>. Em seguida, podemos adicionar estilos adicionais para controlar o espaçamento, alinhamento e distribuição dos elementos dentro do contêiner.</p>\n<p>Algumas propriedades importantes do flexbox incluem:</p>\n<ul>\n<li><code>flex-direction</code>: define a direção em que os elementos são organizados, horizontalmente (<code>row</code>) ou verticalmente (<code>column</code>).</li>\n<li><code>justify-content</code>: controla o alinhamento dos elementos ao longo do eixo principal (horizontal ou vertical).</li>\n<li><code>align-items</code>: controla o alinhamento dos elementos ao longo do eixo secundário (vertical ou horizontal).</li>\n<li><code>flex-wrap</code>: permite que os elementos sejam enrolados automaticamente em linhas adicionais, se necessário.</li>\n<li><code>order</code>: permite alterar a ordem em que os elementos são exibidos em um layout flexível.</li>\n</ul>","order":1}}},"quiz":{"name":"Questionário","slug":"quiz","short":"Questionário","order":6,"headline":"Verifique seu conhecimento respondendo a algumas perguntas","blocks":{"rSXYRbeFkk":{"order":1,"type":"quiz","questions":{"que_NQ8csVn3VH":{"choices":{"cho_GwfD6XVcxL":{"choice":"Uma técnica de layout CSS que permite criar layouts flexíveis e responsivos.","order":1,"correct":true},"cho_jJT91nY6YW":{"choice":"Um seletor avançado para controlar o espaçamento entre elementos em uma página web.","order":3,"correct":false},"cho_FigDtrizlE":{"order":2,"choice":"Um tipo de fonte usada para estilizar textos em um site.","correct":false}},"order":5,"question":"O que é flexbox no CSS?"},"que_ueMXMAbJuC":{"choices":{"cho_P2JuDRJLuX":{"correct":true,"order":3,"choice":"Usar o nome do elemento HTML, classe ou ID como seletor."},"cho_qJ0kHMJ6EI":{"choice":"Usar colchetes para envolver o seletor.","order":2,"correct":false},"cho_e8sRmFZLqR":{"choice":"Usar aspas duplas para envolver o seletor.","order":1,"correct":false}},"question":"Qual é a sintaxe básica para selecionar elementos no CSS?","order":2},"que_hKMOUp2zTk":{"question":"O que são media queries no CSS?","order":3,"choices":{"cho_uwYC8hKSur":{"correct":false,"choice":"Seletores avançados para estilizar elementos de maneiras específicas.","order":3},"cho_QgHvFkBoLe":{"choice":"Técnicas para aplicar transformações a elementos HTML.","order":1,"correct":false},"cho_G5VOtH8rzo":{"correct":true,"order":2,"choice":"Regras de estilo que mudam com base nas características do dispositivo, como a largura da tela."}}},"que_uUGelcCcAi":{"order":4,"choices":{"cho_dxkkkUOPMl":{"order":2,"correct":false,"choice":"padding"},"cho_lXCs1QgY2m":{"correct":true,"choice":"background-color","order":3},"cho_fONXxtrZZV":{"correct":false,"order":1,"choice":"border"}},"question":"Qual é uma propriedade CSS usada para controlar a cor de fundo de um elemento?"},"que_75MJwdnE0V":{"choices":{"cho_8LdYXA1DT8":{"correct":false,"order":2,"choice":"Organizar o conteúdo estrutural de um documento HTML."},"cho_6RVtAkIOnd":{"order":3,"correct":false,"choice":"Criar interatividade em páginas web."},"cho_0iJIolgHGj":{"correct":true,"choice":"Descrever a aparência visual de documentos HTML e XML.","order":1}},"order":1,"question":"Qual é a função do CSS?"},"que_XHlf727KJ3":{"order":6,"choices":{"cho_eECDsLbXdJ":{"choice":"flex-wrap","correct":false,"order":3},"cho_aYBVndSbDK":{"correct":false,"choice":"align-items","order":2},"cho_JOj01AO1dZ":{"choice":"justify-content","order":1,"correct":true}},"question":"Qual é a propriedade do flexbox usada para controlar o alinhamento dos elementos ao longo do eixo principal?"}}}}},"wrapup":{"name":"Resumo","short":"Resumo","slug":"wrapup","order":5,"headline":"Vamos revisar o que acabamos de ver até agora","blocks":{"JzFLCnEz0F":{"type":"list","order":1,"items":{"con_EHsWbpZMbP":{"title":"Introdução ao CSS","order":1,"content":"Neste módulo, aprendemos os conceitos básicos do CSS e sua sintaxe. Vimos como selecionar elementos HTML com seletores, como aplicar propriedades para definir o estilo desses elementos e como o processo de cascata e especificidade pode afetar a maneira como as regras de estilo são aplicadas. No próximo módulo, veremos como podemos usar seletores avançados para selecionar elementos com mais precisão."},"con_JkG1q1bXWF":{"title":"Layouts Responsivos","content":"Neste módulo, aprendemos como criar layouts responsivos usando técnicas como media queries e flexbox. Vimos que as media queries permitem que ajustemos o estilo de elementos com base nas características do dispositivo, enquanto o flexbox oferece uma maneira fácil de organizar e alinhar elementos em um layout flexível. Com essas técnicas, podemos criar layouts que se adaptam a diferentes dispositivos e tamanhos de tela, oferecendo uma ótima experiência de usuário em todos os dispositivos.","order":3},"con_A6vua61rMJ":{"content":"Neste módulo, aprendemos como usar seletores avançados para selecionar elementos com mais precisão no CSS, bem como diferentes propriedades CSS para estilizar esses elementos. Vimos que as propriedades CSS podem ser agrupadas em várias categorias, desde tipografia até transformações e animações. No próximo módulo, veremos como podemos usar o layout responsivo para tornar nossos sites adequados para dispositivos móveis.","order":2,"title":"Seletores e Propriedades"}}}}},"module2":{"order":2,"name":"Seletores e Propriedades","blocks":{"lCe7UNXZH6":{"html":"<p>Neste módulo, vamos aprofundar nossos conhecimentos sobre seletores e propriedades CSS. Veremos como podemos usar seletores avançados para selecionar elementos com mais precisão e como aplicar diferentes propriedades CSS para personalizar o estilo desses elementos.</p>\n<h2>Seletores Avançados</h2>\n<p>Além de selecionar elementos HTML por seus nomes de tag, classes ou IDs, o CSS também oferece seletores mais avançados para selecionar elementos com base em seu conteúdo, posição na página ou outros atributos. Alguns exemplos de seletores avançados incluem:</p>\n<ul>\n<li><code>:hover</code>: seleciona um elemento quando o cursor do mouse está sobre ele.</li>\n<li><code>:nth-child(n)</code>: seleciona o enésimo filho de um elemento pai.</li>\n<li><code>:not(selector)</code>: seleciona todos os elementos que não correspondem ao seletor especificado.</li>\n</ul>\n<p>Ao usar seletores avançados, é importante lembrar que eles podem ter impacto no desempenho da página, especialmente se forem usados em muitos elementos ou páginas grandes. Portanto, deve-se usá-los com moderação e testar a performance em diferentes dispositivos e navegadores.</p>\n<h2>Propriedades CSS</h2>\n<p>Há uma grande variedade de propriedades CSS que podemos aplicar aos elementos selecionados para personalizar o estilo de um site. Algumas das principais categorias de propriedades incluem:</p>\n<ul>\n<li><p><strong>Tipografia:</strong> Propriedades relacionadas à fonte, tamanho, cor e estilo do texto, como <code>font-family</code>, <code>font-size</code> e <code>color</code>.</p>\n</li>\n<li><p><strong>Cores e Fundos:</strong> Propriedades relacionadas à cor de fundo de um elemento, como <code>background-color</code>, e à transparência, como <code>opacity</code>.</p>\n</li>\n<li><p><strong>Bordas e Margens:</strong> Propriedades relacionadas a bordas e margens de um elemento, como <code>border</code>, <code>margin</code> e <code>padding</code>.</p>\n</li>\n<li><p><strong>Posicionamento:</strong> Propriedades que controlam o posicionamento e o tamanho de elementos, como <code>position</code>, <code>top</code>, <code>bottom</code>, <code>left</code> e <code>right</code>.</p>\n</li>\n<li><p><strong>Transformações e Animações:</strong> Propriedades que permitem aplicar transformações e animações a elementos, como <code>transform</code> e <code>animation</code>.</p>\n</li>\n</ul>\n<p>É importante lembrar que nem todas as propriedades funcionam em todos os navegadores e dispositivos. Portanto, é recomendável usar recursos de detecção de recursos ou bibliotecas como Modernizr para criar fallbacks ou alternativas quando uma determinada propriedade não é suportada.</p>","type":"html","order":1},"TqTlvH37Vs":{"type":"highlight","order":2,"content":"Neste módulo, aprendemos como usar seletores avançados para selecionar elementos com mais precisão no CSS, bem como diferentes propriedades CSS para estilizar esses elementos. Vimos que as propriedades CSS podem ser agrupadas em várias categorias, desde tipografia até transformações e animações. No próximo módulo, veremos como podemos usar o layout responsivo para tornar nossos sites adequados para dispositivos móveis.","title":"Conclusão - Seletores e Propriedades"}},"slug":"seletores","short":"Seletores"},"module1":{"slug":"introducao","blocks":{"UfbH4MawQv":{"order":1,"html":"<p>O CSS (Cascading Style Sheets) é uma linguagem de folhas de estilo usada para descrever a apresentação visual de documentos HTML e XML. Ele permite que os desenvolvedores da web separem o conteúdo estrutural do documento da sua apresentação visual, tornando mais fácil manter e atualizar o design de um site. </p>\n<p>Neste módulo, vamos explorar os conceitos fundamentais do CSS e sua sintaxe básica para criar estilos em páginas web.</p>\n<h2>Selecionando elementos HTML com CSS</h2>\n<p>A primeira coisa que precisamos entender é como selecionar os elementos HTML que queremos estilizar. O CSS usa seletores para identificar esses elementos. Por exemplo, podemos usar o seletor <code>h1</code> para selecionar todos os cabeçalhos de primeiro nível (<code>&lt;h1&gt;</code>) em nosso documento HTML. </p>\n<p>Podemos também combinar vários seletores para selecionar elementos específicos. Por exemplo, podemos usar o seletor <code>.destaque</code> para selecionar todos os elementos que possuem a classe &quot;destaque&quot;, ou o seletor <code>nav ul li</code> para selecionar todos os itens de lista (<code>&lt;li&gt;</code>) que estão dentro de uma lista não ordenada (<code>&lt;ul&gt;</code>) em uma barra de navegação (<code>&lt;nav&gt;</code>).</p>\n<h2>Propriedades CSS</h2>\n<p>Uma vez que tenhamos selecionado um elemento ou conjunto de elementos, podemos aplicar propriedades CSS para definir seu estilo. Existem centenas de propriedades CSS diferentes, mas algumas das mais comuns são:</p>\n<ul>\n<li><code>color</code>: define a cor do texto.</li>\n<li><code>font-family</code>: define a família de fontes usada para o texto.</li>\n<li><code>font-size</code>: define o tamanho da fonte do texto.</li>\n<li><code>background-color</code>: define a cor de fundo de um elemento.</li>\n<li><code>padding</code>: define o espaço entre o conteúdo e a borda de um elemento.</li>\n<li><code>margin</code>: define o espaço entre os elementos.</li>\n</ul>\n<h2>Cascata e Especificidade</h2>\n<p>O termo &quot;cascata&quot; no nome CSS refere-se à maneira como as regras de estilo são aplicadas em cascata, começando com as regras mais gerais e, em seguida, substituindo-as por regras mais específicas. Isso permite que você defina estilos gerais para todo o documento e, em seguida, substitua esses estilos em partes específicas do documento, se necessário.</p>\n<p>No entanto, isso também pode levar a problemas quando duas ou mais regras conflitam uma com a outra. Por exemplo, se tivermos uma regra que define a cor do texto como vermelho para todos os cabeçalhos (<code>h1, h2, h3, h4, h5, h6</code>) e, em seguida, uma regra posterior que define a cor do texto como azul apenas para <code>&lt;h2&gt;</code> elementos, qual cor será utilizada para os elementos <code>&lt;h2&gt;</code>? </p>\n<p>A resposta é que depende da especificidade das duas regras. A regra mais específica terá prioridade sobre a regra mais geral. Para calcular a especificidade, podemos atribuir valores numéricos aos seletores em uma regra, com valores mais altos indicando maior especificidade. Por exemplo, uma regra com um seletor de classe (<code>.destaque</code>) terá uma especificidade maior do que uma regra com um seletor de tag (<code>h1</code>).</p>","type":"html"},"RyCcqkM0sN":{"order":2,"type":"highlight","content":"Neste módulo, aprendemos os conceitos básicos do CSS e sua sintaxe. Vimos como selecionar elementos HTML com seletores, como aplicar propriedades para definir o estilo desses elementos e como o processo de cascata e especificidade pode afetar a maneira como as regras de estilo são aplicadas. No próximo módulo, veremos como podemos usar seletores avançados para selecionar elementos com mais precisão.","title":"Conclusão - Introdução ao CSS"}},"short":"Introdução","order":1,"name":"Introdução ao CSS"},"practice":{"short":"Prática","blocks":{"EV9YGcgZS6":{"type":"html","order":1,"html":"<p>Nesta lição, colocaremos a teoria em prática por meio de atividades práticas. Clique nos itens abaixo para conferir cada exercício e desenvolver habilidades práticas que o ajudarão a ter sucesso na disciplina.</p>"},"tqL9aUXVsC":{"items":{"yVoqIBu5Gc":{"content":"Crie uma página HTML com vários elementos div posicionados horizontalmente e aplique flexbox para tornar o layout flexível e responsivo. Use as propriedades do flexbox para ajustar o espaçamento entre os elementos, alinhamento e distribuição. Em seguida, adicione media queries para ajustar o layout em telas menores, como smartphones ou tablets.","title":"Criando um layout responsivo com flexbox","order":3},"hqgJ50PgXl":{"content":"Crie uma página HTML com vários elementos de lista (`<ul>` e `<ol>`) e aplique seletores avançados do CSS para estilizar esses elementos de maneiras diferentes. Por exemplo, use o seletor `:hover` para alterar a cor do texto quando o mouse passa sobre um item da lista ou use o seletor `nth-child()` para definir um estilo diferente para cada segundo item da lista.","title":"Aplicando seletores avançados","order":2},"3BqfdlZlhR":{"title":"Selecionando elementos HTML","order":1,"content":"Crie um arquivo HTML com alguns elementos, como títulos (`<h1>`) e parágrafos (`<p>`), e crie um arquivo CSS separado para estilizar esses elementos. Use diferentes seletores CSS para selecionar os elementos e aplicar propriedades CSS básicas, como cor de texto, tamanho da fonte e margem."}},"order":2,"type":"list"}},"order":4,"name":"Exercícios Práticos","headline":"Vamos colocar seus conhecimentos em prática","slug":"practice"}},"languageId":"pt-BR","name":"CSS: Folhas de Estilo em Cascata","version":4,"id":"NMnQutjgiuKBZgrD4BD7","viewCount":0,"headline":"Aprenda a criar estilos para páginas web com CSS","createdAt":"2023-05-31T06:04:51.635Z","keywords":{"keyword2":"web design","keyword4":"responsive design","keyword1":"CSS","keyword3":"styling"},"colorScheme":"blue","category":"Web Development"}