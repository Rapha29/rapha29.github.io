{"overview":{"title":"Visão geral","content":"Este curso aborda o JavaScript, que é uma das principais linguagens de programação usadas para desenvolver aplicativos e sites interativos na web. Os participantes aprenderão desde as noções básicas da linguagem até funções avançadas, como manipulação do DOM e chamadas assíncronas com AJAX. O curso é adequado tanto para iniciantes quanto para aqueles que já possuem alguma experiência em programação JavaScript."},"sections":{"practice":{"blocks":{"9zKaFbiV94":{"order":1,"type":"html","html":"<p>Nesta lição, colocaremos a teoria em prática por meio de atividades práticas. Clique nos itens abaixo para conferir cada exercício e desenvolver habilidades práticas que o ajudarão a ter sucesso na disciplina.</p>"},"G6yitZunXw":{"type":"list","order":2,"items":{"kHfcYCuZ5F":{"content":"Crie um objeto JavaScript com informações pessoais (nome, idade, endereço etc.). Converta o objeto em JSON e imprima no console. Em seguida, converta o JSON de volta para um objeto JavaScript e imprima suas propriedades separadamente no console.","order":6,"title":"Exercício 2: Manipulando dados JSON"},"K2g4os27AI":{"title":"Exercício 1: Variáveis e tipos de dados","order":1,"content":"Crie uma variável chamada 'idade' com o valor 30. Em seguida, crie uma variável chamada 'nome' com seu nome. Concatene as duas variáveis em uma string e imprima no console."},"qwFzOOV0eo":{"content":"Crie uma função que receba um número como parâmetro e verifique se ele é par ou ímpar. Se for par, imprima 'O número é par'. Se for ímpar, imprima 'O número é ímpar'.","order":2,"title":"Exercício 2: Estruturas de controle de fluxo"},"1O5xLX4TxJ":{"order":3,"content":"Selecione um elemento HTML qualquer na página e mude sua cor de fundo para amarelo quando ele for clicado.","title":"Exercício 1: Modificando elementos HTML"},"yoEHpLHO3l":{"content":"Crie um novo elemento <div> e adicione-o como último filho do elemento <body>. Defina a cor de fundo do novo elemento como verde.","title":"Exercício 2: Criando novos elementos HTML","order":4},"vrwZ9YlIvw":{"content":"Faça uma solicitação GET para a URL https://jsonplaceholder.typicode.com/users/1 e imprima a resposta no console.","title":"Exercício 1: Fazendo uma solicitação Ajax","order":5}}}},"name":"Exercícios Práticos","order":4,"headline":"Vamos colocar seus conhecimentos em prática","short":"Prática","slug":"practice"},"quiz":{"name":"Questionário","order":6,"short":"Questionário","headline":"Verifique seu conhecimento respondendo a algumas perguntas","slug":"quiz","blocks":{"AVcHLNjHuf":{"order":1,"type":"quiz","questions":{"que_lN8nf05U2p":{"question":"Qual método podemos usar para selecionar um elemento na DOM usando JavaScript?","order":2,"choices":{"cho_mR6c28it1E":{"correct":true,"order":2,"choice":"B) document.querySelector()"},"cho_iCIog4STqm":{"choice":"C) document.getElementsByClassName()","correct":false,"order":3},"cho_pfgDTUnYrT":{"order":1,"correct":false,"choice":"A) document.getElementById()"}}},"que_0WQmMYL0MA":{"choices":{"cho_2p8S4ydZYg":{"order":3,"choice":"C) Converter dados em formato JSON","correct":false},"cho_itUh5PNMbp":{"order":2,"correct":true,"choice":"B) Adicionar interatividade e dinamismo a uma página Web"},"cho_Vivl8ZyITk":{"correct":false,"order":1,"choice":"A) Manipular o layout de uma página Web"}},"question":"Qual é a função do JavaScript?","order":1},"que_KnsXxtdgS0":{"choices":{"cho_LoNIm5kAbW":{"order":2,"choice":"B) Uma técnica de programação que permite atualizar partes específicas de uma página Web sem recarregá-la completamente","correct":true},"cho_KyNVRp9kgq":{"choice":"C) Uma linguagem de programação usada para criar páginas Web","order":3,"correct":false},"cho_2NcZ7gv0tI":{"correct":false,"choice":"A) Um formato de dados leves baseado em texto","order":1}},"question":"O que é Ajax?","order":4},"que_qlLlvCzTzL":{"question":"O que é JSON?","order":6,"choices":{"cho_5HBClvnQVQ":{"correct":false,"choice":"C) Uma linguagem de programação usada para criar páginas Web","order":3},"cho_YJGyJEh5Zi":{"correct":true,"choice":"A) Um formato de dados leves baseado em texto","order":1},"cho_gSOQpv6drc":{"order":2,"correct":false,"choice":"B) Uma técnica de programação que permite atualizar partes específicas de uma página Web sem recarregá-la completamente"}}},"que_tLJgvnhv0l":{"question":"Como podemos adicionar uma classe a um elemento HTML usando JavaScript?","choices":{"cho_itAsjd9Hhd":{"choice":"B) element.classList.add('classe')","correct":true,"order":2},"cho_wsNgNr9TY4":{"choice":"C) element.addClass('classe')","correct":false,"order":3},"cho_Q5GIFPxAnL":{"order":1,"choice":"A) element.class.add('classe')","correct":false}},"order":3},"que_pXSHOK1Kac":{"order":5,"question":"Como podemos fazer uma solicitação Ajax usando JavaScript?","choices":{"cho_iTtQTnUbgx":{"correct":true,"choice":"B) Usando o objeto 'XMLHttpRequest'","order":2},"cho_tkvRD415d9":{"choice":"C) Usando o método 'fetch()'","correct":false,"order":3},"cho_s90xPVraYr":{"choice":"A) Usando o método 'ajaxRequest()'","correct":false,"order":1}}}}}}},"module1":{"blocks":{"xs5tnJo44P":{"html":"<p>O JavaScript é uma das linguagens de programação mais importantes para o desenvolvimento de aplicativos Web interativos e dinâmicos. Neste módulo, você aprenderá os conceitos fundamentais da linguagem JavaScript, incluindo variáveis, tipos de dados, operadores, estruturas de controle de fluxo e funções.</p>\n<h2>O que é JavaScript?</h2>\n<p>JavaScript é uma linguagem de script dinamicamente tipada, multi-paradigma e orientada a objetos. Ela pode ser usada tanto no lado do cliente (no navegador) quanto no lado do servidor (com Node.js). Foi criada em 1995 por Brendan Eich enquanto trabalhava na Netscape Communications Corporation. Atualmente, é uma das linguagens de programação mais populares do mundo e é amplamente utilizada para criar aplicações Web.</p>\n<h2>Variáveis em JavaScript</h2>\n<p>Variáveis são utilizadas para armazenar valores. Em JavaScript, as variáveis são declaradas usando a palavra-chave <code>var</code>, <code>let</code> ou <code>const</code>. A diferença entre elas é como elas são escopadas e se permitem reatribuição de valor. Por exemplo:</p>\n<pre><code class=\"language-javascript\">var nome = &quot;Maria&quot;; // variável global\nlet idade = 30; // variável local\nconst PI = 3.14; // constante\n</code></pre>\n<h2>Tipos de dados em JavaScript</h2>\n<p>JavaScript possui vários tipos de dados, incluindo números, strings, booleanos, objetos e arrays.</p>\n<ul>\n<li>Números: podem ser inteiros ou decimais.</li>\n<li>Strings: são sequências de caracteres delimitados por aspas simples ou duplas.</li>\n<li>Booleanos: representam valores verdadeiros ou falsos.</li>\n<li>Objetos: são coleções de propriedades e métodos.</li>\n<li>Arrays: são listas ordenadas de valores.</li>\n</ul>\n<h2>Operadores em JavaScript</h2>\n<p>Os operadores permitem realizar operações matemáticas, lógicas e de comparação em JavaScript. Alguns exemplos de operadores incluem:</p>\n<ul>\n<li>Aritméticos: <code>+</code>, <code>-</code>, <code>*</code>, <code>/</code></li>\n<li>Lógicos: <code>&amp;&amp;</code> (and), <code>||</code> (or), <code>!</code> (not)</li>\n<li>Comparação: <code>==</code>, <code>!=</code>, <code>&lt;</code>, <code>&lt;=</code>, <code>&gt;</code>, <code>&gt;=</code></li>\n</ul>\n<h2>Estruturas de controle de fluxo em JavaScript</h2>\n<p>As estruturas de controle de fluxo permitem controlar o fluxo de execução do código em JavaScript. As estruturas incluem:</p>\n<ul>\n<li>If/else: permite executar diferentes blocos de código com base em uma condição.</li>\n<li>Switch: permite executar diferentes blocos de código com base em diferentes valores.</li>\n<li>Loop while: permite repetir um bloco de código enquanto uma condição for verdadeira.</li>\n<li>Loop for: permite repetir um bloco de código por um número específico de vezes.</li>\n</ul>\n<h2>Funções em JavaScript</h2>\n<p>As funções permitem agrupar blocos de código que podem ser reutilizados em diferentes partes do programa. Em JavaScript, as funções são definidas usando a palavra-chave <code>function</code>. Por exemplo:</p>\n<pre><code class=\"language-javascript\">function soma(a, b) {\n  return a + b;\n}\n</code></pre>\n<p>Neste exemplo, a função <code>soma</code> recebe dois parâmetros (<code>a</code> e <code>b</code>) e retorna sua soma.</p>","order":1,"type":"html"},"4djnyNjLiR":{"title":"Conclusão - Introdução ao JavaScript","content":"Este módulo cobriu os conceitos fundamentais da linguagem JavaScript, desde variáveis até funções. Estes conceitos fornecerão uma base sólida para o desenvolvimento de aplicativos Web mais complexos. No próximo módulo, você aprenderá como manipular a DOM usando JavaScript para criar páginas Web dinâmicas e interativas.","type":"highlight","order":2}},"name":"Introdução ao JavaScript","order":1,"slug":"introducao","short":"Introdução"},"wrapup":{"order":5,"blocks":{"1QPaLDdOph":{"type":"list","items":{"con_300X1kKpAe":{"title":"Introdução ao JavaScript","order":1,"content":"Este módulo cobriu os conceitos fundamentais da linguagem JavaScript, desde variáveis até funções. Estes conceitos fornecerão uma base sólida para o desenvolvimento de aplicativos Web mais complexos. No próximo módulo, você aprenderá como manipular a DOM usando JavaScript para criar páginas Web dinâmicas e interativas."},"con_7WGZ9hSqls":{"order":2,"content":"A manipulação da DOM é um aspecto crítico do desenvolvimento de aplicações Web interativas e dinâmicas. Neste módulo, você aprendeu como acessar e modificar elementos HTML na DOM usando JavaScript, como criar novos elementos e como ouvir eventos. No próximo módulo, você aprenderá sobre tecnologias Web essenciais como Ajax e JSON.","title":"Manipulação do DOM"},"con_ZftwQWHzsP":{"order":3,"title":"Chamadas Assíncronas com AJAX","content":"Neste módulo, você aprendeu sobre a técnica de programação Ajax, que permite atualizar partes específicas de uma página Web sem recarregá-la completamente, e o formato de dados JSON, que é frequentemente usado para trocar dados entre um servidor e um aplicativo Web. Agora você pode adicionar interatividade e dinamismo às suas aplicações Web usando estas tecnologias essenciais."}},"order":1}},"short":"Resumo","slug":"wrapup","name":"Resumo","headline":"Vamos revisar o que acabamos de ver até agora"},"module3":{"short":"AJAX","slug":"ajax","order":3,"name":"Chamadas Assíncronas com AJAX","blocks":{"VqhRmWAQr5":{"order":2,"title":"Conclusão - Chamadas Assíncronas com AJAX","type":"highlight","content":"Neste módulo, você aprendeu sobre a técnica de programação Ajax, que permite atualizar partes específicas de uma página Web sem recarregá-la completamente, e o formato de dados JSON, que é frequentemente usado para trocar dados entre um servidor e um aplicativo Web. Agora você pode adicionar interatividade e dinamismo às suas aplicações Web usando estas tecnologias essenciais."},"SKnQu1pe5D":{"html":"<p>Ajax (Asynchronous JavaScript and XML) é uma tecnologia que permite atualizar partes específicas de uma página Web sem recarregá-la completamente. JSON (JavaScript Object Notation) é um formato de dados leve e fácil de ler e escrever que é frequentemente usado para trocar dados entre um servidor e um aplicativo Web. Neste módulo, você aprenderá como usar Ajax e JSON em suas aplicações Web.</p>\n<h2>O que é Ajax?</h2>\n<p>O Ajax é uma técnica de programação que permite ao navegador enviar e receber dados do servidor em segundo plano, sem interromper a exibição da página. Isso significa que partes específicas de uma página podem ser atualizadas dinamicamente, sem a necessidade de carregar a página inteira novamente.</p>\n<h2>Como usar Ajax em JavaScript?</h2>\n<p>Em JavaScript, podemos usar o objeto <code>XMLHttpRequest</code> para fazer solicitações Ajax. Este objeto permite enviar solicitações HTTP assíncronas para o servidor e manipular a resposta quando ela chegar. Por exemplo, para fazer uma solicitação GET e imprimir a resposta no console, podemos usar:</p>\n<pre><code class=\"language-javascript\">const xhr = new XMLHttpRequest();\nxhr.open(&#39;GET&#39;, &#39;https://api.example.com/data&#39;);\nxhr.onload = function() {\n  console.log(xhr.response);\n};\nxhr.send();\n</code></pre>\n<p>Este código faz uma solicitação GET para <a href=\"https://api.example.com/data\">https://api.example.com/data</a> e imprime a resposta no console quando ela chegar. A resposta pode ser JSON, XML ou qualquer outro formato.</p>\n<h2>O que é JSON?</h2>\n<p>JSON é um formato de dados leves baseado em texto que é fácil de ler e escrever. Ele é frequentemente usado para trocar dados entre um servidor e um aplicativo Web. Um objeto JSON é composto por pares chave-valor, separados por vírgula e delimitados por chaves. Por exemplo:</p>\n<pre><code class=\"language-json\">{\n  &quot;nome&quot;: &quot;Maria&quot;,\n  &quot;idade&quot;: 30,\n  &quot;endereco&quot;: {\n    &quot;rua&quot;: &quot;Rua A&quot;,\n    &quot;cidade&quot;: &quot;São Paulo&quot;\n  },\n  &quot;telefones&quot;: [&quot;(11) 1234-5678&quot;, &quot;(11) 9876-5432&quot;]\n}\n</code></pre>\n<h2>Como usar JSON em JavaScript?</h2>\n<p>Em JavaScript, podemos converter um objeto JSON em um objeto JavaScript usando o método <code>JSON.parse()</code>. Por exemplo, para converter o objeto JSON acima em um objeto JavaScript, podemos usar:</p>\n<pre><code class=\"language-javascript\">const dados = &#39;{&quot;nome&quot;:&quot;Maria&quot;,&quot;idade&quot;:30,&quot;endereco&quot;:{&quot;rua&quot;:&quot;Rua A&quot;,&quot;cidade&quot;:&quot;São Paulo&quot;},&quot;telefones&quot;:[&quot;(11) 1234-5678&quot;,&quot;(11) 9876-5432&quot;]}&#39;;\nconst objeto = JSON.parse(dados);\n</code></pre>\n<p>Também podemos converter um objeto JavaScript em um objeto JSON usando o método <code>JSON.stringify()</code>. Por exemplo, para converter o objeto JavaScript em JSON novamente, podemos usar:</p>\n<pre><code class=\"language-javascript\">const json = JSON.stringify(objeto);\n</code></pre>","type":"html","order":1}}},"module2":{"blocks":{"FsVMTBzreG":{"type":"html","order":1,"html":"<p>A manipulação da Document Object Model (DOM) é um aspecto fundamental do desenvolvimento de aplicações Web interativas e dinâmicas. Neste módulo, você aprenderá como usar JavaScript para manipular a DOM, incluindo como acessar e modificar elementos HTML, criar novos elementos e ouvir eventos.</p>\n<h2>O que é a DOM?</h2>\n<p>A Document Object Model (DOM) é uma representação em memória de uma página Web. Ela é composta por todos os elementos HTML da página e suas propriedades. A DOM permite que o JavaScript acesse e manipule esses elementos.</p>\n<h2>Selecionando elementos na DOM</h2>\n<p>Para selecionar um elemento na DOM, podemos usar o método <code>document.querySelector()</code>. Este método recebe um seletor CSS e retorna o primeiro elemento que corresponde ao seletor. Por exemplo, para selecionar o primeiro elemento <code>&lt;p&gt;</code> na página, podemos usar:</p>\n<pre><code class=\"language-javascript\">const primeiroParagrafo = document.querySelector(&#39;p&#39;);\n</code></pre>\n<p>Podemos selecionar vários elementos usando o método <code>document.querySelectorAll()</code>, que retorna uma NodeList contendo todos os elementos que correspondem ao seletor. Por exemplo, para selecionar todos os elementos <code>&lt;p&gt;</code> na página, podemos usar:</p>\n<pre><code class=\"language-javascript\">const paragrafos = document.querySelectorAll(&#39;p&#39;);\n</code></pre>\n<h2>Modificando elementos na DOM</h2>\n<p>Uma vez que um elemento foi selecionado, podemos modificar suas propriedades, como seu conteúdo interno ou seus atributos. Por exemplo, para mudar o texto do primeiro elemento <code>&lt;p&gt;</code> na página, podemos usar:</p>\n<pre><code class=\"language-javascript\">primeiroParagrafo.textContent = &#39;Novo texto&#39;;\n</code></pre>\n<p>Para adicionar uma classe a um elemento, podemos usar:</p>\n<pre><code class=\"language-javascript\">primeiroParagrafo.classList.add(&#39;destaque&#39;);\n</code></pre>\n<p>E para remover uma classe, podemos usar:</p>\n<pre><code class=\"language-javascript\">primeiroParagrafo.classList.remove(&#39;destaque&#39;);\n</code></pre>\n<h2>Criando elementos na DOM</h2>\n<p>Podemos criar novos elementos HTML usando o método <code>document.createElement()</code>. Por exemplo, para criar um novo elemento <code>&lt;p&gt;</code>, podemos usar:</p>\n<pre><code class=\"language-javascript\">const novoParagrafo = document.createElement(&#39;p&#39;);\n</code></pre>\n<p>Em seguida, podemos definir suas propriedades e adicionar ao documento usando os métodos <code>appendChild()</code> ou <code>insertBefore()</code>. Por exemplo, para adicionar o novo parágrafo como o último filho do elemento <code>&lt;body&gt;</code>, podemos usar:</p>\n<pre><code class=\"language-javascript\">document.body.appendChild(novoParagrafo);\n</code></pre>\n<h2>Ouvindo eventos na DOM</h2>\n<p>Eventos são ações que ocorrem em um elemento, como clicar em um botão ou pressionar uma tecla. Para ouvir eventos na DOM, podemos usar o método <code>addEventListener()</code>. Este método recebe dois argumentos: o nome do evento (como &#39;click&#39; ou &#39;keydown&#39;) e uma função que será chamada quando o evento ocorrer. Por exemplo, para ouvir o evento de clique em um botão, podemos usar:</p>\n<pre><code class=\"language-javascript\">const meuBotao = document.querySelector(&#39;#meu-botao&#39;);\n\nmeuBotao.addEventListener(&#39;click&#39;, function() {\n  console.log(&#39;Botão clicado!&#39;);\n});\n</code></pre>"},"lhiunUJMut":{"title":"Conclusão - Manipulação do DOM","type":"highlight","content":"A manipulação da DOM é um aspecto crítico do desenvolvimento de aplicações Web interativas e dinâmicas. Neste módulo, você aprendeu como acessar e modificar elementos HTML na DOM usando JavaScript, como criar novos elementos e como ouvir eventos. No próximo módulo, você aprenderá sobre tecnologias Web essenciais como Ajax e JSON.","order":2}},"name":"Manipulação do DOM","slug":"dom","order":2,"short":"DOM"}},"id":"nm5EsDwfXtg512rgE203","keywords":{"keyword1":"JavaScript","keyword3":"DOM manipulation","keyword4":"AJAX calls","keyword2":"Web Development"},"colorScheme":"orange","version":4,"conclusion":{"content":"Parabéns por concluir este curso! Você deu um passo importante para liberar todo o seu potencial. Concluir este curso não é apenas adquirir conhecimento; trata-se de colocar esse conhecimento em prática e causar um impacto positivo no mundo ao seu redor.","title":"Conclusão"},"languageId":"pt-BR","category":"Programming","name":"JavaScript","createdAt":"2023-05-31T06:11:12.761Z","viewCount":0,"headline":"Aprenda a linguagem de programação mais utilizada na web"}